# Para testar, recomendo a utilização do projeto Verademo
# Disponivel em: https://github.com/IGDEXE/Verademo

trigger:
- master

pool:
  name: Veracodepractice # the name that we gave to the self hosted pool

variables:
  veracodeAppProfile: AzDevOps.$(Build.DefinitionName)
  caminhoPacote: target/verademo.war

steps:
- checkout: self
- script: |
    echo "Listando arquivos no diretório:"
    ls -R  # Lista todos os arquivos no repositório
- script: |
    echo "Procurando pom.xml no repositório clonado..."
    find / -name pom.xml  # Busca dentro do repositório clonado
  displayName: 'Procurando POM'
- task: Maven@4
  inputs:
    mavenPomFile: '$(Build.SourcesDirectory)/pom.xml'  # Ajuste para o caminho correto
    goals: 'clean install'
  
- script: |
    curl -O -L https://downloads.veracode.com/securityscan/pipeline-scan-LATEST.zip
  displayName: 'Download Pipeline Scanner'
- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: 'pipeline-scan-LATEST.zip'
    destinationFolder: '$(Build.ArtifactStagingDirectory)'
    cleanDestinationFolder: false
- script: |
      java -jar $(Build.ArtifactStagingDirectory)/pipeline-scan.jar -vid $(APIID) -vkey $(APIKEY) --file '$(caminhoPacote)' --issue_details true 
  displayName: 'Veracode PipelineScan'
  continueOnError: true

- task: CmdLine@2
  inputs:
    script: |
      export SRCCLR_SCM_NAME=$(veracodeAppProfile)
      curl -sSL https://download.sourceclear.com/ci.sh | bash -s – scan --update-advisor --allow-dirty
  displayName: 'Veracode SCA'
  continueOnError: true
  